/* Autogenerated by cbindgen. Do not edit. */

#ifndef IROHFFI_H
#define IROHFFI_H

#pragma once

/* Generated with cbindgen:0.29.0 */

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct IrohTransportHandle {
  uint64_t _0;
} IrohTransportHandle;

typedef struct IrohNodeHandle {
  uint64_t _0;
} IrohNodeHandle;

typedef struct IrohListenerHandle {
  uint64_t _0;
} IrohListenerHandle;

typedef struct IrohStreamHandle {
  uint64_t _0;
} IrohStreamHandle;

int32_t iroh_transport_new(struct IrohTransportHandle *out_handle);

int32_t iroh_node_new(struct IrohTransportHandle transport,
                      const uint8_t *ed25519_priv_ptr,
                      size_t ed25519_priv_len,
                      const char *peer_id_raw,
                      struct IrohNodeHandle *out_handle);

int32_t iroh_listen(struct IrohNodeHandle node,
                    const char *listen_maddr,
                    struct IrohListenerHandle *out_listener);

int32_t iroh_accept(struct IrohListenerHandle listener,
                    uint64_t _timeout_ms,
                    struct IrohStreamHandle *out_stream);

int32_t iroh_dial(struct IrohNodeHandle node,
                  const char *_remote_maddr,
                  struct IrohStreamHandle *out_stream);

int32_t iroh_stream_read(struct IrohStreamHandle stream,
                         uint8_t *buf,
                         size_t len,
                         uint64_t timeout,
                         ptrdiff_t *out_n);

int32_t iroh_stream_write(struct IrohStreamHandle stream,
                          const uint8_t *buf,
                          size_t len,
                          uint64_t timeout,
                          ptrdiff_t *out_n);

int32_t iroh_stream_close(struct IrohStreamHandle stream);

int32_t iroh_listen_close(struct IrohNodeHandle node_handle);

int32_t iroh_transport_close(struct IrohTransportHandle transport_handle);

int32_t iroh_shutdown(void);

#endif  /* IROHFFI_H */
